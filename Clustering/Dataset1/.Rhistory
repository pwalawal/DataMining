# display dendogram for centroid heirarchial clustering
rect.hclust(userDistanceCluster, k=8, border="green")
# display dendogram for centroid heirarchial clustering with respect to 8 cluster
userCluster <- cutree(distanceCluster, k=8)
# 8 clusters as given in data
newdataset <- data.frame(dataset, userCluster)
# Appending Clusters to dataset to get clear plots of cluster
plot(newdataset, col =  userCluster)
#displaying clusters of graph
clusplot(newdataset, userCluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of average hierarchail clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(data,color=userCluster)
#This gives 3d plot of complete hierarchail clustering from scatterplot3d package.
#Detaching packages
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
#This gives 2d plot of k means clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=kMeansCluster$cluster)
#This gives 3d plot of average hierarchail clustering from scatterplot3d package.
#Detaching packages
datasetCsv=read.csv("dataset1.csv")
data <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
#View(data)
MyDistanceFun <- function(data)
{
data$x <- data$x * 4
data$y <- data$y * 2
adata<-as.matrix(data)
userDistanceMatrix <- dist(adata)
return(userDistanceMatrix)
}
kMeansCluster <- kmeans(MyDistanceFun(data), 8)
plot(userDistanceCluster)
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
plot(userDistanceCluster)
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
newdataset <- data.frame(dataset, kMeansCluster$cluster)
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
library("cluster", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
scatterplot3d(newdataset,color=kMeansCluster$cluster)
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of k means clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=kMeansCluster$cluster)
#This gives 3d plot of average hierarchail clustering from scatterplot3d package.
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
plot(userDistanceCluster)
# display dendogram for centroid heirarchial clustering
newdataset <- data.frame(dataset, kMeansCluster$cluster)
scatterplot3d(newdataset,color=kMeansCluster$cluster)
scatterplot3d(newdataset,color=kMeansCluster$cluster)
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of k means clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=kMeansCluster$cluster)
#This gives 3d plot of average hierarchail clustering from scatterplot3d package.
MyDistanceFun <- function(data)
{
data$x <- data$x * 4
data$y <- data$y * 2
adata<-as.matrix(data)
userDistanceMatrix <- dist(adata)
return(userDistanceMatrix)
}
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
# Complete Hierarchial Clustering
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
scatterplot3d(newdataset,color=userDistanceCluster$cluster)
scatterplot3d(newdataset,color=kMeansCluster$cluster)
scatterplot3d(newdataset,color=userDistanceCluster$cluster)
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of k means clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=kMeansCluster$cluster)
#This gives 3d plot of average hierarchail clustering from scatterplot3d package.
#Detaching packages
datasetCsv=read.csv("dataset1.csv")
data <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
#View(data)
MyDistanceFun <- function(data)
{
data$x <- data$x * 4
data$y <- data$y * 2
adata<-as.matrix(data)
userDistanceMatrix <- dist(adata)
return(userDistanceMatrix)
}
#userDistanceMatrix <- dist(adata)
#print(userDistanceMatrix)
# calculating distance matrix for distance based clustering
#userDistanceCluster <- hclust(MyDistanceFun(data), method="complete")
# Complete Hierarchial Clustering
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
plot(userDistanceCluster)
# display dendogram for centroid heirarchial clustering
#rect.hclust(userDistanceCluster, k=8, border="green")
# display dendogram for centroid heirarchial clustering with respect to 8 cluster
#userCluster <- cutree(distanceCluster, k=8)
# 8 clusters as given in data
#newdataset <- data.frame(dataset, userCluster)
# Appending Clusters to dataset to get clear plots of cluster
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
plot(newdataset, col = userDistanceCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#plot(newdataset, col =  userCluster)
#displaying clusters of graph
#clusplot(newdataset, userCluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of average hierarchail clustering
scatterplot3d(newdataset,color=userDistanceCluster$cluster)
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of k means clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=kMeansCluster$cluster)
#This gives 3d plot of average hierarchail clustering from scatterplot3d package.
#Detaching packages
datasetCsv=read.csv("dataset1.csv")
data <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
#View(data)
MyDistanceFun <- function(data)
{
data$x <- data$x * 4
data$y <- data$y * 2
adata<-as.matrix(data)
userDistanceMatrix <- dist(adata)
return(userDistanceMatrix)
}
#userDistanceMatrix <- dist(adata)
#print(userDistanceMatrix)
# calculating distance matrix for distance based clustering
#userDistanceCluster <- hclust(MyDistanceFun(data), method="complete")
# Complete Hierarchial Clustering
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
plot(userDistanceCluster)
# display dendogram for centroid heirarchial clustering
#rect.hclust(userDistanceCluster, k=8, border="green")
# display dendogram for centroid heirarchial clustering with respect to 8 cluster
#userCluster <- cutree(distanceCluster, k=8)
# 8 clusters as given in data
#newdataset <- data.frame(dataset, userCluster)
# Appending Clusters to dataset to get clear plots of cluster
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
plot(newdataset, col = userDistanceCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#plot(newdataset, col =  userCluster)
#displaying clusters of graph
#clusplot(newdataset, userCluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of average hierarchail clustering
scatterplot3d(newdataset,color=userDistanceCluster$cluster)
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of k means clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=kMeansCluster$cluster)
#This gives 3d plot of average hierarchail clustering from scatterplot3d package.
#Detaching packages
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
# Cluster are 8 as given in dataset
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
scatterplot3d(newdataset,color=kMeansCluster$cluster)
scatterplot3d(newdataset,color=userDistanceCluster$cluster)
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
scatterplot3d(newdataset,color=userDistanceCluster$cluster)
plot(newdataset, col = userDistanceCluster$cluster)
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
plot(newdataset, col = userDistanceCluster$cluster)
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
plot(newdataset, col = userDistanceCluster$cluster)
datasetCsv=read.csv("dataset1.csv")
data <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
#View(data)
MyDistanceFun <- function(data)
{
data$x <- data$x * 4
data$y <- data$y * 2
adata<-as.matrix(data)
userDistanceMatrix <- dist(adata)
return(userDistanceMatrix)
}
#userDistanceMatrix <- dist(adata)
#print(userDistanceMatrix)
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
#calculating k means clustering for user defined distance matrix
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
# Appending Clusters to dataset to get clear plots of cluster
plot(newdataset, col = userDistanceCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of average hierarchail clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=userDistanceCluster$cluster)
#This gives 3d plot of complete hierarchail clustering from scatterplot3d package.
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of k means clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=kMeansCluster$cluster)
#This gives 3d plot of average hierarchail clustering from scatterplot3d package.
datasetCsv=read.csv("dataset1.csv")
data <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
#View(data)
MyDistanceFun <- function(data)
{
data$x <- data$x * 4
data$y <- data$y * 2
adata<-as.matrix(data)
userDistanceMatrix <- dist(adata)
return(userDistanceMatrix)
}
#userDistanceMatrix <- dist(adata)
#print(userDistanceMatrix)
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
#calculating k means clustering for user defined distance matrix
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
# Appending Clusters to dataset to get clear plots of cluster
plot(newdataset, col = userDistanceCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of average hierarchail clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=userDistanceCluster$cluster)
#This gives 3d plot of complete hierarchail clustering from scatterplot3d package.
epgraph<-epsGraph(dataset, eps = 1, weighted = FALSE, dist=FALSE)
#representing dataset as graph
graphcluster<-kcores(epgraph, mode = "graph", diag = TRUE,ignore.eval = FALSE)
#Using kcores algorithm for graph clustering
newdataset <- data.frame(dataset, graphcluster)
plot(newdataset, col = graphcluster)
#displaying clusters of graph
clusplot(newdataset, graphcluster, color=TRUE, shade=TRUE, lines=0)
plot(newdataset, col = graphcluster)
clusplot(newdataset, graphcluster, color=TRUE, shade=TRUE, lines=0)
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
scatterplot3d(newdataset,color=graphcluster)
#displaying clusters of graph
clusplot(newdataset, graphcluster, color=TRUE, shade=TRUE, lines=0)
plot(newdataset, col = graphcluster)
datasetCsv=read.csv("dataset1.csv")
data <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
#View(data)
MyDistanceFun <- function(data)
{
data$x <- data$x * 4
data$y <- data$y * 2
adata<-as.matrix(data)
userDistanceMatrix <- dist(adata)
return(userDistanceMatrix)
}
#userDistanceMatrix <- dist(adata)
#print(userDistanceMatrix)
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
#calculating k means clustering for user defined distance matrix
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
# Appending Clusters to dataset to get clear plots of cluster
plot(newdataset, col = userDistanceCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of average hierarchail clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=userDistanceCluster$cluster)
#This gives 3d plot of complete hierarchail clustering from scatterplot3d package.
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of k means clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=kMeansCluster$cluster)
#This gives 3d plot of average hierarchail clustering from scatterplot3d package.
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
plot(newdataset, col = graphcluster)
#displaying clusters of graph
clusplot(newdataset, graphcluster, color=TRUE, shade=TRUE, lines=0)
clusplot(newdataset, densitycluster$cluster, color=TRUE, shade=TRUE, lines=0)
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# Average Heirarchial Clustering for distance based clustering
distanceMatrix <- dist(dataset, method = "euclidean")
# calculating distance matrix for distance based clustering
distanceCluster <- hclust(distanceMatrix, method="average")
plot(distanceCluster)
# display dendogram for centroid heirarchial clustering
rect.hclust(distanceCluster, k=8, border="blue")
# display dendogram for centroid heirarchial clustering with respect to 8 cluster
hcluster <- cutree(distanceCluster, k=8)
# 8 clusters as given in data
newdataset <- data.frame(dataset, hcluster)
# Appending Clusters to dataset to get clear plots of cluster
plot(newdataset, col =  hcluster)
#displaying clusters of graph
clusplot(newdataset, hcluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of average hierarchail clustering
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
distanceMatrix <- dist(dataset, method = "euclidean")
densitycluster<-dbscan(distanceMatrix, eps=1 , MinPts = 3,method = "dist", showplot = 1)
# print(densitycluster) gives summary information  about dbscan
newdataset <- data.frame(dataset, densitycluster$cluster)
# Appending Clusters to dataset to get clear plots of cluster
plot(newdataset, col = densitycluster$cluster)
#displaying clusters of graph
clusplot(newdataset, densitycluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of dbscan clustering
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
epgraph<-epsGraph(dataset, eps = 1, weighted = FALSE, dist=FALSE)
#representing dataset as graph
graphcluster<-kcores(epgraph, mode = "graph", diag = TRUE,ignore.eval = FALSE)
#Using kcores algorithm for graph clustering
newdataset <- data.frame(dataset, graphcluster)
plot(newdataset, col = graphcluster)
#displaying clusters of graph
clusplot(newdataset, graphcluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of graph clustering
datasetCsv=read.csv("dataset1.csv")
data <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
#View(data)
MyDistanceFun <- function(data)
{
data$x <- data$x * 4
data$y <- data$y * 2
adata<-as.matrix(data)
userDistanceMatrix <- dist(adata)
return(userDistanceMatrix)
}
#userDistanceMatrix <- dist(adata)
#print(userDistanceMatrix)
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
#calculating k means clustering for user defined distance matrix
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
# Appending Clusters to dataset to get clear plots of cluster
plot(newdataset, col = userDistanceCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of average hierarchail clustering
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of k means clustering
scatterplot3d(datasetCsv, color=datasetCsv$cluster)
#This gives 3d plot of of original dataset with given cluster label from scatterplot3d package.
scatterplot3d(newdataset,color=kMeansCluster$cluster)
#This gives 3d plot of average hierarchail clustering from scatterplot3d package.
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of k means clustering
datasetCsv=read.csv("dataset1.csv")
data <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
#View(data)
MyDistanceFun <- function(data)
{
data$x <- data$x * 4
data$y <- data$y * 2
adata<-as.matrix(data)
userDistanceMatrix <- dist(adata)
return(userDistanceMatrix)
}
#userDistanceMatrix <- dist(adata)
#print(userDistanceMatrix)
userDistanceCluster <- kmeans(MyDistanceFun(data), 8)
#calculating k means clustering for user defined distance matrix
newdataset <- data.frame(dataset, userDistanceCluster$cluster)
# Appending Clusters to dataset to get clear plots of cluster
plot(newdataset, col = userDistanceCluster$cluster)
clusplot(newdataset, userDistanceCluster$cluster, color=TRUE, shade=TRUE, lines=0)
datasetCsv=read.csv("dataset1.csv")
dataset <- datasetCsv[,1:3]
# Excluded the cluster label , as it is only given to check performance of our method
# K-Means Cluster Analysis
kMeansCluster <- kmeans(dataset, 8)
# Cluster are 8 as given in dataset
# append cluster assignment
newdataset <- data.frame(dataset, kMeansCluster$cluster)
plot(newdataset, col = kMeansCluster$cluster)
#displaying clusters of graph
clusplot(newdataset, kMeansCluster$cluster, color=TRUE, shade=TRUE, lines=0)
#This gives 2d plot of k means clustering
